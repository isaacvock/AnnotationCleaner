##### PARAMETERS TO ALTER

# Path to bam files, relative to directory that AnnotationCleaner was deployed to
samples:
  WT_ctl_1: bams/WT_ctl_1.bam
  WT_ctl_2: bams/WT_ctl_2.bam
  WT_ctl_3: bams/WT_ctl_3.bam

# Are any of the samples long read data?
# Leave as empty `[]` if none are.
# Otherwise, input list of sample IDs. For example
# if WT_1 of samples above is long read data,
# long_reads should be ["WT_1"]. If both WT_1 and WT_2
# are long read data, long_reads should be ["WT_1", "WT_2"]
long_reads: []

# Annotation GTF to clean or to guide assembly
reference_gtf: data/annotation/CHESS.gtf

# Only clean the provided reference (i.e., don't run StringTie?)
clean_only: False

# Flattened reference (only relevant if cleaning reference)
  # File is created by pipeline if it does not already exist.
flat_ref: data/annotation/CHESS_flat.gtf

# Strandedness of library
  # set to "reverse", "yes", or "no"
  # reverse means that read 2 represents 5' to 3' sequence of original RNA (read 1 thus represents its reverse complement)
  # yes means that read 1 represents 5' to 3' sequence of original RNA
  # no means unstranded
  # Used by FeatureCounts, though naming convention is from HTSeq
strandedness: "reverse"

# Paired-end data?
PE: True


# Tuning the pipeline
  # 1) LRSR_strat: What strategy to use for long + short read integration?
    # "mix_only": Use StringTie's --mix mode to generate final annotation
    # "LR_then_SR": Use long read data to generate an assembly that is used
    #   as a guide for short read assembly.
    # "mix_then_SR": Use StringTie's --mix mode to generate an assmebly that
    #   is used as a guide for short read assembly. Strategy used in NMDtxDB paper ().
    # "LR_then_mix": Use long read data to generate an assembly that is used as a guide
    #   for a long read + short read StringTie --mix assembly. 
  # 1) use_mix: Use stringtie's --mix mode for using both long and short reads?
  #   If not, then long read will be used
  # 2) trim_reference: Trim the provided reference?
  # 3) trim_assembly: Trim the final assembly?
options:
  trim_reference: True
  trim_assembly: True
  LRSR_strat: ""


# Which short reads should be paired with which long reads?
# Key: short read ID
# Value: long read ID
# Example:
  # LRSR_pairs:
  #   WT: WT_LR
  #   KO: KO_LR
LRSR_pairs:
  


##### STRINGTIE TRANSCRIPTOME ASSEMBLY PARAMETERS

# Use provided reference as guide for StringTie
use_reference: True

# Parameters to pass to Stringtie 
shortread_stringtie_params: "-f 0.05"

# Parameters to pass to Stringtie --merge
shortread_stringtie_merge_params: ""

# Parameters to pass to Stringtie 
longread_stringtie_params: "-f 0.05"

# Parameters to pass to Stringtie --merge
longread_stringtie_merge_params: ""

# Parameters to pass to Stringtie 
mixed_stringtie_params: "-f 0.05"

# Parameters to pass to Stringtie --merge
mixed_stringtie_merge_params: ""

##### PARAMETERS AFFECTING ALL ASSEMBLERS

# Parameters to pass to samtools (other than input, output, -m, and -T)
samtools_params: ""


##### ANNOTATION PRUNING RSCRIPT PARAMETERS

### Options are:
# -c (--fdr): False-exon-discovery rate (default = 0.05)
# -l (--floor): Min. factor diference between exonic and 
#               intronic RPK to call a region exonic (default = 3)
# -a (--readlength): Total effective read length. E.g., if PE-50 data
#               this should be 100 (50*2) You can also increase this
#               above the actual read length to increase conservativeness
#               of exonic RPK estimate (default = 100).
# -p (--priorvar): Variance of prior on intronic RPK trend. Decrease this
#               to increase the amount of intronic RPK regualrization.
#               (default = 2)

# Pruning parameters for StringTie assemblies
pruning_assembly_params: "--fdr 0.01"

# Pruning parameters for reference
pruning_reference_params: "--fdr 0.001"


##### Exonic bin splitting parmaters #####

### Options are:
# -s (--size): Largest exonic bin allowed (in # of nucleotides). Bins larger than this will be split
#               up into smaller exonic bins to increase resolution of end trimming and prevent loss 
#               of isoforms due to overextended UTRs.
#               (default 200)

splitting_bins_params: ""


##### FeatureCounts parameters #####

# To be passed to all calls to featureCounts
feature_counts_params: ""

# To be passed to featureCounts --nonOverlap parameter
  # Sets number of bases in reads that can not overlap
  # with exonic regions of gene for read to get called intronic.
  # Soft-clipping is unfortunately considered non-overlapping
  # by featureCounts, so sometimes worth increasing this a 
  # bit from "0" to avoid calling a significant fraction of
  # truly exonic reads intronic.
feature_counts_exon_nonoverlap: "0"


##### ANNOTATION FILTERING RSCRIPT PARAMETERS

filter_params: ""

